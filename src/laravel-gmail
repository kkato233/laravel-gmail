#!/usr/bin/env php
<?php

require __DIR__ . '/../autoload.php';

// [START gmail_quickstart]

if (php_sapi_name() != 'cli') {
    throw new Exception('This application must be run on the command line.');
}

use Google\Client;
use Google\Service\Gmail;

$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/../../');
$dotenv->load();

$GMAIL_CLIENT_SECRET_PATH = $_ENV["GMAIL_CLIENT_SECRET_PATH"];
$GMAIL_SERVICE_ACCOUNT_KEY = $_ENV["GMAIL_SERVICE_ACCOUNT_KEY"];

/**
 * Returns an authorized API client.
 * @return Client the authorized client object
 */
function getClient()
{
    $SCOPES = implode(' ', [Gmail::GMAIL_SEND]);
    $GMAIL_CLIENT_SECRET_PATH = $_ENV["GMAIL_CLIENT_SECRET_PATH"];
    $GMAIL_SERVICE_ACCOUNT_KEY = $_ENV["GMAIL_SERVICE_ACCOUNT_KEY"];
    
    $client = new Client();
    $client->setApplicationName('LaravelGmail');
    $client->setScopes($SCOPES);
    $client->setAuthConfig($GMAIL_CLIENT_SECRET_PATH);
    $client->setAccessType('offline');
    $client->setPrompt('select_account consent');

    $tokenPath = $GMAIL_SERVICE_ACCOUNT_KEY;
    if (file_exists($tokenPath)) {
        $accessToken = json_decode(file_get_contents($tokenPath), true);
        $client->setAccessToken($accessToken);
    }

    // If there is no previous token or it's expired.
    if ($client->isAccessTokenExpired()) {
        // Refresh the token if possible, else fetch a new one.
        if ($client->getRefreshToken()) {
            $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());
        } else {
            // Request authorization from the user.
            $authUrl = $client->createAuthUrl();
            printf("Open the following link in your browser:\n%s\n", $authUrl);
            print 'Enter verification code: ';
            $authCode = trim(fgets(STDIN));

            // Exchange authorization code for an access token.
            $accessToken = $client->fetchAccessTokenWithAuthCode($authCode);
            $client->setAccessToken($accessToken);

            // Check to see if there was an error.
            if (array_key_exists('error', $accessToken)) {
                throw new Exception(join(', ', $accessToken));
            }
        }
        // Save the token to a file.
        if (!file_exists(dirname($tokenPath))) {
            mkdir(dirname($tokenPath), 0700, true);
        }
        file_put_contents($tokenPath, json_encode($client->getAccessToken()));
    }
    return $client;
}


// Get the API client and construct the service object.
$client = getClient();

echo $GMAIL_CLIENT_SECRET_PATH . "\n";
echo $GMAIL_SERVICE_ACCOUNT_KEY . "\n";
echo "access_token=" . $client->getAccessToken()['access_token'] . "\n";
echo "refresh_token=" . $client->getAccessToken()['refresh_token'] . "\n";
